//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30128.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50303.0
// 
namespace SLClient.WCF1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WCF1.IMyService")]
    public interface IMyService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMyService/Get_dbo_t3_Query_TSql", ReplyAction="http://tempuri.org/IMyService/Get_dbo_t3_Query_TSqlResponse")]
        System.IAsyncResult BeginGet_dbo_t3_Query_TSql(byte[] query, System.AsyncCallback callback, object asyncState);
        
        string EndGet_dbo_t3_Query_TSql(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMyService/GetData", ReplyAction="http://tempuri.org/IMyService/GetDataResponse")]
        System.IAsyncResult BeginGetData(byte[] query, System.AsyncCallback callback, object asyncState);
        
        byte[] EndGetData(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMyServiceChannel : SLClient.WCF1.IMyService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Get_dbo_t3_Query_TSqlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Get_dbo_t3_Query_TSqlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MyServiceClient : System.ServiceModel.ClientBase<SLClient.WCF1.IMyService>, SLClient.WCF1.IMyService {
        
        private BeginOperationDelegate onBeginGet_dbo_t3_Query_TSqlDelegate;
        
        private EndOperationDelegate onEndGet_dbo_t3_Query_TSqlDelegate;
        
        private System.Threading.SendOrPostCallback onGet_dbo_t3_Query_TSqlCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDataDelegate;
        
        private EndOperationDelegate onEndGetDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public MyServiceClient() {
        }
        
        public MyServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MyServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MyServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MyServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<Get_dbo_t3_Query_TSqlCompletedEventArgs> Get_dbo_t3_Query_TSqlCompleted;
        
        public event System.EventHandler<GetDataCompletedEventArgs> GetDataCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SLClient.WCF1.IMyService.BeginGet_dbo_t3_Query_TSql(byte[] query, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGet_dbo_t3_Query_TSql(query, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string SLClient.WCF1.IMyService.EndGet_dbo_t3_Query_TSql(System.IAsyncResult result) {
            return base.Channel.EndGet_dbo_t3_Query_TSql(result);
        }
        
        private System.IAsyncResult OnBeginGet_dbo_t3_Query_TSql(object[] inValues, System.AsyncCallback callback, object asyncState) {
            byte[] query = ((byte[])(inValues[0]));
            return ((SLClient.WCF1.IMyService)(this)).BeginGet_dbo_t3_Query_TSql(query, callback, asyncState);
        }
        
        private object[] OnEndGet_dbo_t3_Query_TSql(System.IAsyncResult result) {
            string retVal = ((SLClient.WCF1.IMyService)(this)).EndGet_dbo_t3_Query_TSql(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGet_dbo_t3_Query_TSqlCompleted(object state) {
            if ((this.Get_dbo_t3_Query_TSqlCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Get_dbo_t3_Query_TSqlCompleted(this, new Get_dbo_t3_Query_TSqlCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Get_dbo_t3_Query_TSqlAsync(byte[] query) {
            this.Get_dbo_t3_Query_TSqlAsync(query, null);
        }
        
        public void Get_dbo_t3_Query_TSqlAsync(byte[] query, object userState) {
            if ((this.onBeginGet_dbo_t3_Query_TSqlDelegate == null)) {
                this.onBeginGet_dbo_t3_Query_TSqlDelegate = new BeginOperationDelegate(this.OnBeginGet_dbo_t3_Query_TSql);
            }
            if ((this.onEndGet_dbo_t3_Query_TSqlDelegate == null)) {
                this.onEndGet_dbo_t3_Query_TSqlDelegate = new EndOperationDelegate(this.OnEndGet_dbo_t3_Query_TSql);
            }
            if ((this.onGet_dbo_t3_Query_TSqlCompletedDelegate == null)) {
                this.onGet_dbo_t3_Query_TSqlCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGet_dbo_t3_Query_TSqlCompleted);
            }
            base.InvokeAsync(this.onBeginGet_dbo_t3_Query_TSqlDelegate, new object[] {
                        query}, this.onEndGet_dbo_t3_Query_TSqlDelegate, this.onGet_dbo_t3_Query_TSqlCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SLClient.WCF1.IMyService.BeginGetData(byte[] query, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetData(query, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] SLClient.WCF1.IMyService.EndGetData(System.IAsyncResult result) {
            return base.Channel.EndGetData(result);
        }
        
        private System.IAsyncResult OnBeginGetData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            byte[] query = ((byte[])(inValues[0]));
            return ((SLClient.WCF1.IMyService)(this)).BeginGetData(query, callback, asyncState);
        }
        
        private object[] OnEndGetData(System.IAsyncResult result) {
            byte[] retVal = ((SLClient.WCF1.IMyService)(this)).EndGetData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDataCompleted(object state) {
            if ((this.GetDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDataCompleted(this, new GetDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDataAsync(byte[] query) {
            this.GetDataAsync(query, null);
        }
        
        public void GetDataAsync(byte[] query, object userState) {
            if ((this.onBeginGetDataDelegate == null)) {
                this.onBeginGetDataDelegate = new BeginOperationDelegate(this.OnBeginGetData);
            }
            if ((this.onEndGetDataDelegate == null)) {
                this.onEndGetDataDelegate = new EndOperationDelegate(this.OnEndGetData);
            }
            if ((this.onGetDataCompletedDelegate == null)) {
                this.onGetDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetDataDelegate, new object[] {
                        query}, this.onEndGetDataDelegate, this.onGetDataCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override SLClient.WCF1.IMyService CreateChannel() {
            return new MyServiceClientChannel(this);
        }
        
        private class MyServiceClientChannel : ChannelBase<SLClient.WCF1.IMyService>, SLClient.WCF1.IMyService {
            
            public MyServiceClientChannel(System.ServiceModel.ClientBase<SLClient.WCF1.IMyService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGet_dbo_t3_Query_TSql(byte[] query, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = query;
                System.IAsyncResult _result = base.BeginInvoke("Get_dbo_t3_Query_TSql", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGet_dbo_t3_Query_TSql(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("Get_dbo_t3_Query_TSql", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetData(byte[] query, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = query;
                System.IAsyncResult _result = base.BeginInvoke("GetData", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndGetData(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("GetData", _args, result)));
                return _result;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WCF1.IClientAccessPolicy")]
    public interface IClientAccessPolicy {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IClientAccessPolicy/GetClientAccessPolicy", ReplyAction="http://tempuri.org/IClientAccessPolicy/GetClientAccessPolicyResponse")]
        System.IAsyncResult BeginGetClientAccessPolicy(System.AsyncCallback callback, object asyncState);
        
        byte[] EndGetClientAccessPolicy(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClientAccessPolicyChannel : SLClient.WCF1.IClientAccessPolicy, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetClientAccessPolicyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetClientAccessPolicyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClientAccessPolicyClient : System.ServiceModel.ClientBase<SLClient.WCF1.IClientAccessPolicy>, SLClient.WCF1.IClientAccessPolicy {
        
        private BeginOperationDelegate onBeginGetClientAccessPolicyDelegate;
        
        private EndOperationDelegate onEndGetClientAccessPolicyDelegate;
        
        private System.Threading.SendOrPostCallback onGetClientAccessPolicyCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ClientAccessPolicyClient() {
        }
        
        public ClientAccessPolicyClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClientAccessPolicyClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientAccessPolicyClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientAccessPolicyClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetClientAccessPolicyCompletedEventArgs> GetClientAccessPolicyCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SLClient.WCF1.IClientAccessPolicy.BeginGetClientAccessPolicy(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetClientAccessPolicy(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] SLClient.WCF1.IClientAccessPolicy.EndGetClientAccessPolicy(System.IAsyncResult result) {
            return base.Channel.EndGetClientAccessPolicy(result);
        }
        
        private System.IAsyncResult OnBeginGetClientAccessPolicy(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((SLClient.WCF1.IClientAccessPolicy)(this)).BeginGetClientAccessPolicy(callback, asyncState);
        }
        
        private object[] OnEndGetClientAccessPolicy(System.IAsyncResult result) {
            byte[] retVal = ((SLClient.WCF1.IClientAccessPolicy)(this)).EndGetClientAccessPolicy(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetClientAccessPolicyCompleted(object state) {
            if ((this.GetClientAccessPolicyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetClientAccessPolicyCompleted(this, new GetClientAccessPolicyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetClientAccessPolicyAsync() {
            this.GetClientAccessPolicyAsync(null);
        }
        
        public void GetClientAccessPolicyAsync(object userState) {
            if ((this.onBeginGetClientAccessPolicyDelegate == null)) {
                this.onBeginGetClientAccessPolicyDelegate = new BeginOperationDelegate(this.OnBeginGetClientAccessPolicy);
            }
            if ((this.onEndGetClientAccessPolicyDelegate == null)) {
                this.onEndGetClientAccessPolicyDelegate = new EndOperationDelegate(this.OnEndGetClientAccessPolicy);
            }
            if ((this.onGetClientAccessPolicyCompletedDelegate == null)) {
                this.onGetClientAccessPolicyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetClientAccessPolicyCompleted);
            }
            base.InvokeAsync(this.onBeginGetClientAccessPolicyDelegate, null, this.onEndGetClientAccessPolicyDelegate, this.onGetClientAccessPolicyCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override SLClient.WCF1.IClientAccessPolicy CreateChannel() {
            return new ClientAccessPolicyClientChannel(this);
        }
        
        private class ClientAccessPolicyClientChannel : ChannelBase<SLClient.WCF1.IClientAccessPolicy>, SLClient.WCF1.IClientAccessPolicy {
            
            public ClientAccessPolicyClientChannel(System.ServiceModel.ClientBase<SLClient.WCF1.IClientAccessPolicy> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetClientAccessPolicy(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetClientAccessPolicy", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndGetClientAccessPolicy(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("GetClientAccessPolicy", _args, result)));
                return _result;
            }
        }
    }
}
